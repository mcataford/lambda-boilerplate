AWSTemplateFormatVersion: 2010-09-09
Parameters:
    ArtifactsBucketName:
        Type: String
        Description: Bucket storing the function source.
Resources:
    # Lambda function
    Function:
        Type: AWS::Lambda::Function
        Properties:
            Code:
                S3Bucket: !Ref ArtifactsBucketName
                S3Key: lambda_function.zip
            FunctionName: sampleFunction
            Handler: src.base.handler
            Role: !GetAtt LambdaExecutionRole.Arn
            Runtime: python3.8
    # Roles
    LambdaExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - lambda.amazonaws.com
                      Action:
                          - sts:AssumeRole
    ApiGatewayRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service:
                              - apigateway.amazonaws.com
                      Action:
                          - sts:AssumeRole
            Path: '/'
            Policies:
                - PolicyName: LambdaAccess
                  PolicyDocument:
                      Version: 2012-10-17
                      Statement:
                        - Effect: Allow
                          Action: 'lambda:*'
                          Resource: !GetAtt Function.Arn


    RestApi:
        Type: AWS::ApiGateway::RestApi
        Properties:
            Name: lambda-api
    GatewayResource:
        Type: AWS::ApiGateway::Resource
        Properties:
            ParentId: !GetAtt RestApi.RootResourceId
            PathPart: lambda
            RestApiId: !Ref RestApi
    PostMethod:
        Type: AWS::ApiGateway::Method
        Properties:
            HttpMethod: POST
            AuthorizationType: NONE
            Integration:
                Credentials: !GetAtt ApiGatewayRole.Arn
                IntegrationHttpMethod: POST
                Type: AWS_PROXY
                Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations'
            OperationName: lambda
            ResourceId: !Ref GatewayResource
            RestApiId: !Ref RestApi
    ApiStage:
        Type: AWS::ApiGateway::Stage
        Properties:
            DeploymentId: !Ref ApiDeployment
            RestApiId: !Ref RestApi
            StageName: 'v0'
    ApiDeployment:
        Type: AWS::ApiGateway::Deployment
        DependsOn: PostMethod
        Properties:
            RestApiId: !Ref RestApi
